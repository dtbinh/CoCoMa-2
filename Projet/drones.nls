drones-own[
 incoming-queue
 beliefs
 intentions
 fuel
 dead?
 protect ; convoy
 target ; enemy
 speed ; maxdir
 vision
 side
 hit?
 leader?
]

to setup-drones
  if nb-drones > 0 [
    let base-min-pxcor min [pxcor] of (patches with [base? and pzcor = mapAlt])
    let base-min-pycor min [pycor] of (patches with [base? and pzcor = mapAlt])
    let base-max-pycor max [pycor] of (patches with [base? and pzcor = mapAlt])
    
    create-drones nb-drones
    ask drones [
      set beliefs []
      set intentions []
      set incoming-queue []
      set fuel max-drones-fuel
      set dead? false
      set protect nobody
      set target nobody
      set speed 0.05 * simu-speed * enemies-ped-speed-coef
      set vision drones-vision
      set side "blue"
      set shape "airplane"
      set color white
      set heading 0
      set hit? false
      set leader? false
    ]
    
    let first-drone min [who] of drones
    
    ask drone first-drone [
      set leader? true
      ifelse (who - 1) mod 2 = 0
      [ move-to patch (base-min-pxcor + 1) base-max-pycor solAlt ]
      [ move-to patch base-min-pxcor base-max-pycor solAlt ]
    ]
    
    if nb-drones > 1 [
      ask turtle-set sort-on [who] drones with [who > first-drone] [
        let rangee (base-max-pycor - base-min-pycor + 1) / (nb-drones / 2)
        ifelse (who - 1) mod 2 = 0 [ set xcor base-min-pxcor + 1 ] [ set xcor base-min-pxcor ] ; a gauche ou a droite selon le nombre (pair ou impair respectivement)
        set ycor base-max-pycor - (floor ((who - first-drone) / 2) * rangee); d'une rangee de plus en plus basse toutes les deux voitures
        set zcor solAlt
      ]
    ]
  ]
  
end

to drones-think
;  Boucle principale des drones
  ask drones [    
      turtle-look ; On regarde autour
      drones-com-info ; On lit les message d'observation
      
      ; Carburant ?
      
      if leader? [ ; Si je suis leader
       drones-leader-responsibilities ; Je fait des trucs de leader
      ]
      drones-com-orders
      
      
   ]
end

to set-protect
  if protect = nobody [
    if who = 28 [ show protect ]
    foreach beliefs [ 
      if first ? = side [ 
        let tmp turtle first item 1 ?
        if [breed] of tmp = convois [
          set protect tmp
          add-intention "follow-protect" "follow-protect?"
        ]
      ;show [breed] of tmp
      ;set protect convoi first item 1 ? 
      ]
    ]
  ]
end  

;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
;           COM INFOS
;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

to drones-com-info
  listen-inform-messages
  drones-send-beliefs
end


to drones-send-beliefs
  ; J'envoi mes beliefs a ma flotte
  let receivers []
  foreach sort-on [who] drones[
    if ( ( distance-nowrap ? < drones-com-radius ) and ( [who] of ? != who ) ) [
      set receivers lput [who] of ? receivers
    ] 
  ]
  ; Si je suis leader, je les envois aussi au drone et aux autres leaders
  if leader? [
    set receivers sentence receivers [who] of ( turtles with [ (breed = convois or breed = drones) and (leader?) and (who != [who] of myself) ] )
  ]
  let msg add-multiple-receivers receivers add-content (list "beliefs" beliefs) create-message "inform"
  send msg
end



;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
;          LEADER RESPONSIBILITIES
;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


to drones-leader-responsibilities
  
end



;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
;           COM ORDERS
;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

to drones-com-orders
      
      
      
end
      

;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
;           
;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@



; intention to follow a convoy to protect
to-report follow-protect?
  let tmp distance-nowrap protect < drones-vision
  if not tmp [ set protect nobody ]
  report not tmp
end

to follow-protect
  face-nowrap protect
  fd speed
end

to drones-manage-intentions
  set-protect
end

to drones-execute-intentions
  execute-intentions
end






;;; Max drones / convoy (more drones on convoy that has the critical car)
;;; Leader ?
;;; Hover over convoy
;;; Shoot enemies
;;; Go to base to refuel
;;; Prioritize the critical car if it's being shot on
;;;


